{"version":3,"sources":["../../controllers/token.controller.js"],"names":["verifyToken","req","res","next","token","headers","status","send","auth","message","jwt","verify","config","secret","err","decoded","userId","id","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAMC,QAAQH,IAAII,OAAJ,CAAY,gBAAZ,CAAd;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAM,KAAR,EAAeC,SAAS,oBAAxB,EAArB,CAAP;AACD;AACDC,yBAAIC,MAAJ,CAAWP,KAAX,EAAkBQ,iBAAOF,GAAP,CAAWG,MAA7B,EAAqC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACrD,QAAID,GAAJ,EAAS,OAAOZ,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAM,KAAR,EAAeC,SAAS,8BAAxB,EAArB,CAAP;AACTR,QAAIe,MAAJ,GAAaD,QAAQE,EAArB;AACAd;AACD,GAJD;AAKD,CAVD;;AAYAe,OAAOC,OAAP,GAAiBnB,WAAjB","file":"token.controller.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport config from '../config/config';\n\nconst verifyToken = (req, res, next) => {\n  const token = req.headers['x-access-token'];\n  if (!token) {\n    return res.status(403).send({ auth: false, message: 'No token provided.' });\n  }\n  jwt.verify(token, config.jwt.secret, (err, decoded) => {\n    if (err) return res.status(500).send({ auth: false, message: 'Failed to authenticate token' });\n    req.userId = decoded.id;\n    next();\n  });\n};\n\nmodule.exports = verifyToken;\n"]}