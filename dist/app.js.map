{"version":3,"sources":["../app.js"],"names":["dotenv","config","app","apiVersion","set","path","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","authController","questionController","req","res","next","err","locals","message","error","get","status","render","listen","process","env","API_PORT","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGAA,iBAAOC,MAAP;;AAEA,IAAMC,MAAM,wBAAZ;;AAEA;;;;AAIA,IAAMC,aAAa,QAAnB;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAL,IAAIE,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAF,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAN,IAAIM,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAR,IAAIM,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAV,IAAIM,GAAJ,CAAQ,6BAAR;AACAN,IAAIM,GAAJ,CAAQC,kBAAQI,MAAR,CAAeR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAL,IAAIM,GAAJ,CAAQ,GAAR,EAAaM,eAAb;AACAZ,IAAIM,GAAJ,OAAYL,UAAZ,YAA+BY,cAA/B;AACAb,IAAIM,GAAJ,OAAYL,UAAZ,iBAAoCa,kBAApC;;AAEA;;AAEAd,IAAIM,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BA,OAAK,0BAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACAjB,IAAIM,GAAJ,CAAQ,UAACY,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAmB;AACzB;AACAA,MAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,MAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAIf,GAAJ,CAAQsB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAP,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUAxB,IAAIyB,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,QAAvB,EAAiC,YAAM,CAAE,CAAzC;;AAEAC,OAAOC,OAAP,GAAiB9B,GAAjB","file":"app.js","sourcesContent":["import createError from 'http-errors';\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport dotenv from 'dotenv';\nimport indexRouter from './routes/index';\nimport authController from './controllers/auth.controller';\nimport questionController from './controllers/question.controller';\n\n\ndotenv.config();\n\nconst app = express();\n\n/**\n * @const apiVersion : api version\n * @type {string}\n */\nconst apiVersion = 'api/v1';\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use(`/${apiVersion}/auth`, authController);\napp.use(`/${apiVersion}/questions`, questionController);\n\n// catch 404 and forward to error handler\n\napp.use((req, res, next) => {\n  next(createError(404));\n});\n\n// error handler\napp.use((err, req, res) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\napp.listen(process.env.API_PORT, () => {});\n\nmodule.exports = app;\n"]}